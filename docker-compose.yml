version: "3.8"

services:
  psql-db:
    image: postgres
    container_name: psql-db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: "@_123456789000Sa"
      POSTGRES_DB: products
    ports:
      - '5433:5432'
    networks:
      - webnet

  eventcore:
    image: atwa4/event-core-api:latest
    container_name: event_core_api
    restart: always
    ports:
      - '8082:8082'
    environment:
      PROFILE: prod
      SPRING_DATASOURCE_URL: jdbc:postgresql://psql-db:5432/products
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: "@_123456789000Sa"
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      WORK_DIR: home/kayany_website/itways
      DOMAIN: http://35.197.20.122:8082
      SMTP_HOST: smtp.gmail.com
      SMTP_PORT: 587
      SMTP_USERNAME: salahsayedatwa@gmail.com
      SMTP_PASSWORD: ovviocmfvepvoesq
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      - psql-db
      - kafka
    volumes:
      - /home/kayany_website/itways:/home/kayany_website/itways
    networks:
      - webnet

  nginx:
    image: nginx:latest
    container_name: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./certbot/www:/var/www/certbot
      - ./certbot/conf:/etc/letsencrypt
    ports:
      - '80:80'
      - '443:443'
    environment:
      PROFILE: test
    depends_on:
      - eventcore
    networks:
      - webnet

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./certbot/www:/var/www/certbot
      - ./certbot/conf:/etc/letsencrypt
    entrypoint: ""
    command: >
      certonly --webroot
      --webroot-path=/var/www/certbot
      --email salahsayedatwa@gmail.com
      --agree-tos
      --no-eff-email
      -d profily.site
      -d www.profily.site
    networks:
      - webnet

  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    container_name: zookeeper
    ports:
      - '2181:2181'
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    networks:
      - webnet

  kafka:
    image: confluentinc/cp-kafka:7.3.0
    container_name: kafka
    ports:
      - '9092:9092'
      - '29092:29092'
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_HOST://0.0.0.0:29092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - webnet

  create-topic:
    image: confluentinc/cp-kafka:7.3.0
    container_name: kafka-create-topic
    depends_on:
      - kafka
    entrypoint: ["/bin/sh", "-c"]
    command: >
      sleep 10 &&
      kafka-topics --create
        --topic analytics-events
        --bootstrap-server kafka:9092
        --partitions 1
        --replication-factor 1
        --if-not-exists
    networks:
      - webnet
    restart: "no"

networks:
  webnet:
